{
  "name": "chat-frontend",
  "version": "1.8.0",
  "description": "Electron Chat Frontend with WebSocket",
  "main": "main.js",
  "scripts": {
    "start": "electron .",
    "dev": "electron . --dev",
    "dev:ui": "vite",
    "dev:electron": "wait-on tcp:5173 && electron . --dev",
    "dev:full": "concurrently -k \"npm:dev:ui\" \"npm:dev:electron\"",
    "build:react": "vite build",
    "build:react:fast": "vite build --mode development --minify=false --sourcemap=false",
    "build": "npm run build:react && electron-builder --config electron-builder.json",
    "build:no-pack": "npm run build:react",
    "build:fast": "npm run build:react:fast",
    "build:win": "npm run build:react && electron-builder --win --config electron-builder.json",
    "build:mac": "npm run build:react && electron-builder --mac --config electron-builder.json",
    "build:linux": "npm run build:react && electron-builder --linux --config electron-builder.json",
    "pack": "npm run build:react && electron-builder --dir --config electron-builder.json",
    "dist": "npm run build:react && electron-builder --publish=never --config electron-builder.json",
    "postinstall": "electron-builder install-app-deps",
    "prepare": "node scripts/download-umd.js"
  },
  "keywords": [
    "electron",
    "chat",
    "websocket",
    "ai"
  ],
  "author": "Your Name",
  "license": "MIT",
  "devDependencies": {
    "@vitejs/plugin-react": "^4.0.0",
    "concurrently": "^8.2.2",
    "electron": "^25.0.0",
    "electron-builder": "^24.0.0",
    "vite": "^5.3.0",
    "wait-on": "^7.0.1"
  },
  "dependencies": {
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "ws": "^8.18.3"
  },
  "build": {
    "appId": "com.example.chat-frontend",
    "productName": "12345智能助手",
    "directories": {
      "output": "dist"
    },
    "files": [
      "main.js",
      "dist/**",
      "styles.css",
      "assets/**",
      "vendor/**"
    ],
    "win": {
      "target": "nsis",
      "icon": "assets/icon.ico"
    },
    "mac": {
      "target": "dmg",
      "icon": "assets/icon.icns"
    },
    "linux": {
      "target": "AppImage",
      "icon": "assets/icon.png"
    }
  }
}
